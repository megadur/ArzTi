/*
 * Webservice ArzTI API
 *
 * Kommunikation des Webservers mit den jeweiligen Rechenzentren V.2021-05-20            
 *
 * The version of the OpenAPI document: V1
 * 
 * Generated by: https://openapi-generator.tech
 */
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using ArzTiServer.Attributes;
using ArzTiServer.Models;
namespace ArzTiServer.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class RezeptUIDApiController : ControllerBase
    { 
        /// <summary>
        /// l�scht ein Rezept
        /// </summary>
        /// <remarks>deleteRezeptUId</remarks>
        /// <param name="ruid">Die Rezept UID.</param>
        /// <response code="200">Liefert das Rezept f�r die ID</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpDelete]
        [Route("/v1/rezept/{ruid}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteRezeptUId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Rezept), description: "Liefert das Rezept f�r die ID")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> DeleteRezeptUId([FromRoute (Name = "ruid")][Required]string ruid);
        /// <summary>
        /// liefert ein Rezept
        /// </summary>
        /// <remarks>getRezeptUId</remarks>
        /// <param name="ruid">Die Rezept UID.</param>
        /// <response code="200">Liefert das gefundene Rezepte.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpGet]
        [Route("/v1/rezept/{ruid}")]
        [ValidateModelState]
        [SwaggerOperation("GetRezeptUId")]
        [SwaggerResponse(statusCode: 200, type: typeof(Rezept), description: "Liefert das gefundene Rezepte.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> GetRezeptUId([FromRoute (Name = "ruid")][Required]string ruid);
        /// <summary>
        /// liefert den Status eines Rezepts
        /// </summary>
        /// <remarks>getRezeptUIdStatus</remarks>
        /// <param name="ruid">Die Rezept UID.</param>
        /// <response code="200">Liefert das gefundene Rezepte.</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpGet]
        [Route("/v1/rezept/{ruid}/status")]
        [ValidateModelState]
        [SwaggerOperation("GetRezeptUIdStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(RezeptStatus), description: "Liefert das gefundene Rezepte.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> GetRezeptUIdStatus([FromRoute (Name = "ruid")][Required]string ruid);
        /// <summary>
        /// Status�nderung eines Rezeptes
        /// </summary>
        /// <remarks>patchRezeptUIdStatus</remarks>
        /// <param name="ruid">Die Rezept UID.</param>
        /// <param name="status">Status value</param>
        /// <response code="200">Liefert den Status des Rezeptes f�r die ID</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpPatch]
        [Route("/v1/rezept/{ruid}/status")]
        [ValidateModelState]
        [SwaggerOperation("PatchRezeptUIdStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(RezeptStatus), description: "Liefert den Status des Rezeptes f�r die ID")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> PatchRezeptUIdStatus([FromRoute (Name = "ruid")][Required]string ruid, [FromQuery (Name = "status")][Required()]string status);
    }
}

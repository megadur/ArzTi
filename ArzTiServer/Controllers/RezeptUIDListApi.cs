/*
 * Webservice ArzTI API
 *
 * Kommunikation des Webservers mit den jeweiligen Rechenzentren V.2021-05-20            
 *
 * The version of the OpenAPI document: V1
 * 
 * Generated by: https://openapi-generator.tech
 */
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using ArzTiServer.Attributes;
using ArzTiServer.Models;
namespace ArzTiServer.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class RezeptUIDListApiController : ControllerBase
    { 
        /// <summary>
        /// �nderung des Abholstatus einer Liste von Rezepten
        /// </summary>
        /// <remarks>patchRezeptUIdListAbholstatus</remarks>
        /// <param name="rezeptUId"></param>
        /// <response code="200">Returns the newly created item</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        /// <response code="405">Validation exception</response>
        [HttpPatch]
        [Route("/v1/rezept/abholung")]
        [Consumes("application/json", "application/_*+json")]
        [ValidateModelState]
        [SwaggerOperation("PatchRezeptUIdListAbholstatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Abholstatus>), description: "Returns the newly created item")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> PatchRezeptUIdListAbholstatus([FromBody]List<RezeptUId> rezeptUId);
        /// <summary>
        /// Status�nderung einer Liste von Rezepten
        /// </summary>
        /// <remarks>patchRezeptUIdListStatus</remarks>
        /// <param name="rezeptStatus">???</param>
        /// <response code="200">Liefert den Status einer Liste von Rezepten</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpPatch]
        [Route("/v1/rezept/status")]
        [Consumes("application/json", "application/_*+json")]
        [ValidateModelState]
        [SwaggerOperation("PatchRezeptUIdListStatus")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RezeptStatus>), description: "Liefert den Status einer Liste von Rezepten")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> PatchRezeptUIdListStatus([FromBody]List<RezeptStatus> rezeptStatus);
        /// <summary>
        /// pr�ft eine Liste von UUID Rezepten
        /// </summary>
        /// <remarks>putRezeptUidListPruefung</remarks>
        /// <param name="rezeptUId">optionaler Datensatz</param>
        /// <response code="202">zur Pr�fung angenommen</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="404">The specified resource was not found</response>
        [HttpPut]
        [Route("/v1/rezept/pruefung")]
        [Consumes("application/json", "application/xml")]
        [ValidateModelState]
        [SwaggerOperation("PutRezeptUidListPruefung")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Unauthorized")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "The specified resource was not found")]
        public abstract Task<IActionResult> PutRezeptUidListPruefung([FromBody]List<RezeptUId> rezeptUId);
    }
}

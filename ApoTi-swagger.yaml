openapi: 3.0.0
info:
  title: Webservice ArzTI API
  description: "Kommunikation des Webservers mit den jeweiligen Rechenzentren
  
  * UC: Abruf der eRezept-Daten - neue (noch nicht gesendete) | eRezept-ID | Zeitraum
  
  * UC: Abruf der eMuster16-Daten - neue (noch nicht gesendete) | eRezept-ID | Zeitraum
  
  * UC: Abruf der pRezept-Daten - neue (noch nicht gesendete) | eRezept-ID | Zeitraum
  
  * UC: Aktualisierung des eRezept-Status - eRezept-ID
  
  * UC: Löschen eines eRezepts - eRezept-ID
  
  * UC: Aktualisierung von Kundendaten (Apotheke -> Rechenzentrum Zuordnung) - Apotheke-IK
  
  * UC: ...
"
  version: V1
servers:
  - url: http://arzsoftware.de/v1
    description: Main (production) server
  - url: http://staging-api.arzsoftware.de
    description: Internal staging server for testing
paths:

  /mrezept:
    get:
      tags:
        - M-Rezept
      summary: liefert eine Liste von M-Rezepten
      description: ""
      parameters:
        - name: maxnum
          in: query
          description: maximale Anzahl der Rezepte, die zurückgegeben werden
          required: false
          schema:
            type: integer
            format: int32
        - name: zeitraum
          in: query
          description: Welcher Zeitraum im Format YYYY-MM
          required: false
          schema:
            type: string
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert eine Page mit gefundenen Rezepten.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----

  /mrezept/Abholstatus:
    put:
      tags:
        - M-Rezept
      summary: Änderung des M-Rezept Abholstatus
      description: "ändert Abholstatus einer Liste von M-Rezepten"
      operationId: "aendereAbholstatusRezeptList"
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Abholstatus'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Abholstatus'
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Returns the newly created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abholstatus'
            text/plain:
              schema:
                $ref: '#/components/schemas/Abholstatus'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
        "405":
          description: "Validation exception"      

  /mrezept/{id}:
    get:
      tags:
        - M-Rezept
      summary: liefert ein M-Rezept
      description: ""
      parameters:
        - name: id
          in: path
          description: Die M-RezeptID.
          required: true
          schema:
            type: string
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert das M-Rezept für die ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
 
    delete:
      tags:
        - M-Rezept
      summary: löscht ein M-Rezept
      description: ""
      parameters:
        - name: id
          in: path
          description: Die M-RezeptID.
          required: true
          schema:
            type: string
      security:
        - BasicAuth: [arz_write]
      responses:
        '200':
          description: Liefert das M-Rezept für die ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /mrezept/{id}/pruefung:
    put:
      tags:
        - M-Rezept
      summary: prüft ein M-Rezept
      description: ""
      parameters:
        - name: id
          in: path
          description: Die M-RezeptID.
          required: true
          schema:
            type: string
      requestBody:
        description: 'optionaler eMuster16 Datensatz'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rezept'
          application/xml:
            schema:
              $ref: '#/components/schemas/Rezept'
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert das M-Rezept für die ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----

  /mrezept/apotheke/{id}:
    get:
      tags:
        - M-Rezept
      summary: Alle Rezepte einer Apotheke
      description: ""
      parameters:
        - name: id
          in: path
          description: Die Apotheke-IK.
          required: true
          schema:
            type: string
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert eine Page mit gefundenen Rezepten.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----

  /mrezept/status:
    get:
      tags:
        - M-Rezept
      summary: Statusabfrage aller M-Rezepte
      description: ""
      parameters:
        - name: zeitraum
          in: query
          description: Welcher Zeitraum im Format YYYY-MM
          required: false
          schema:
            type: string
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert eine Liste der Status aller M-Rezepte
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MRezeptStatus'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MRezeptStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
  /mrezept/status/{id}:
    get:
      tags:
        - M-Rezept
      summary: Statusabfrage des M-Rezeptes
      description: ""
      parameters:
        - name: id
          in: path
          description: Die Rezept-ID.
          required: true
          schema:
            type: string
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert den Status des M-Rezeptes für die ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----
    patch:
      tags:
        - M-Rezept
      summary: Statusänderung des M-Rezeptes
      description: ""
      parameters:
        - name: id
          in: path
          description: Die Rezept-ID.
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MRezeptStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/MRezeptStatus'
      security:
        - BasicAuth: [arz_read]
      responses:
        '200':
          description: Liefert den Status des M-Rezeptes für die ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rezept'
        '401':
          $ref: '#/components/responses/Unauthorized'   # <-----
        '404':
          $ref: '#/components/responses/NotFound'       # <-----

components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
        # Definition of all error statuses
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:

    MRezeptStatus:
      type: object
      properties:
        id:
          type: integer
          description: Status des E-Rezepts
          format: int32
          example: 1
        status:
          type: "string"
          description: "Der Status des Rezeptes"
          enum:
          - "VOR_PRUEFUNG"
          - "FEHLER"
          - "VERBESSERBAR"
          - "ABRECHENBAR"
          - "HINWEIS"
      title: M-Status
  
    Rezept:
      type: object
      properties:
        data:
          type: string
      title: Rezept 
      description: "base64 codierte Leistung"

    # Schema for error response body
    Abholstatus:
      type: object
      properties:
        id:
          type: string
        abgeholt:
          type: boolean
      required:
        - code
        - message
              
    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

tags:
  - name: M-Rezept
    description: Alle Operationen für ein Muster16 Rezept                
  - name: P-Rezept
    description: Alle Operationen für ein Parantelia Rezept         
  - name: E-Rezept
    description: Alle Operationen für ein E Rezept             
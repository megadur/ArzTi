/*
 * Webservice ArzTI API
 *
 * Kommunikation des Webservers mit den jeweiligen Rechenzentren V.2021-05-20 
 *
 * The version of the OpenAPI document: V1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ArzTiClient.Client;
using ArzTiClient.Api;
using ArzTiClient.Model;

namespace ArzTiClient.Test
{
    /// <summary>
    ///  Class for testing RezeptUIDApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RezeptUIDApiTests
    {
        private RezeptUIDApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RezeptUIDApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RezeptUIDApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' RezeptUIDApi
            //Assert.IsInstanceOf(typeof(RezeptUIDApi), instance);
        }

        
        /// <summary>
        /// Test DeleteRezeptUId
        /// </summary>
        [Test]
        public void DeleteRezeptUIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ruid = null;
            //var response = instance.DeleteRezeptUId(ruid);
            //Assert.IsInstanceOf(typeof(Rezept), response, "response is Rezept");
        }
        
        /// <summary>
        /// Test GetRezeptUId
        /// </summary>
        [Test]
        public void GetRezeptUIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ruid = null;
            //var response = instance.GetRezeptUId(ruid);
            //Assert.IsInstanceOf(typeof(Rezept), response, "response is Rezept");
        }
        
        /// <summary>
        /// Test GetRezeptUIdStatus
        /// </summary>
        [Test]
        public void GetRezeptUIdStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ruid = null;
            //var response = instance.GetRezeptUIdStatus(ruid);
            //Assert.IsInstanceOf(typeof(RezeptStatus), response, "response is RezeptStatus");
        }
        
        /// <summary>
        /// Test PatchRezeptUIdStatus
        /// </summary>
        [Test]
        public void PatchRezeptUIdStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ruid = null;
            //string status = null;
            //var response = instance.PatchRezeptUIdStatus(ruid, status);
            //Assert.IsInstanceOf(typeof(RezeptStatus), response, "response is RezeptStatus");
        }
        
    }

}

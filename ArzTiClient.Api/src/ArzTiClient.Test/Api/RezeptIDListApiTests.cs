/*
 * Webservice ArzTI API
 *
 * Kommunikation des Webservers mit den jeweiligen Rechenzentren V.2021-05-20 
 *
 * The version of the OpenAPI document: V1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ArzTiClient.Client;
using ArzTiClient.Api;
using ArzTiClient.Model;

namespace ArzTiClient.Test
{
    /// <summary>
    ///  Class for testing RezeptIDListApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RezeptIDListApiTests
    {
        private RezeptIDListApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RezeptIDListApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RezeptIDListApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' RezeptIDListApi
            //Assert.IsInstanceOf(typeof(RezeptIDListApi), instance);
        }

        
        /// <summary>
        /// Test GetRezeptIdList
        /// </summary>
        [Test]
        public void GetRezeptIdListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //RezeptTyp? reztyp = null;
            //int? maxnum = null;
            //string zeitraum = null;
            //List<string> status = null;
            //var response = instance.GetRezeptIdList(apoik, reztyp, maxnum, zeitraum, status);
            //Assert.IsInstanceOf(typeof(List<Rezept>), response, "response is List<Rezept>");
        }
        
        /// <summary>
        /// Test GetRezeptIdListAbholstatus
        /// </summary>
        [Test]
        public void GetRezeptIdListAbholstatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //RezeptTyp? reztyp = null;
            //string zeitraum = null;
            //var response = instance.GetRezeptIdListAbholstatus(apoik, reztyp, zeitraum);
            //Assert.IsInstanceOf(typeof(List<Rezept>), response, "response is List<Rezept>");
        }
        
        /// <summary>
        /// Test GetRezeptIdListPruefRes
        /// </summary>
        [Test]
        public void GetRezeptIdListPruefResTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //RezeptTyp? reztyp = null;
            //string zeitraum = null;
            //List<string> status = null;
            //var response = instance.GetRezeptIdListPruefRes(apoik, reztyp, zeitraum, status);
            //Assert.IsInstanceOf(typeof(List<RezeptPruefResult>), response, "response is List<RezeptPruefResult>");
        }
        
        /// <summary>
        /// Test GetRezeptIdStatusList
        /// </summary>
        [Test]
        public void GetRezeptIdStatusListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //RezeptTyp? reztyp = null;
            //string zeitraum = null;
            //var response = instance.GetRezeptIdStatusList(apoik, reztyp, zeitraum);
            //Assert.IsInstanceOf(typeof(List<RezeptStatus>), response, "response is List<RezeptStatus>");
        }
        
        /// <summary>
        /// Test PatchRezeptIdListAbholstatus
        /// </summary>
        [Test]
        public void PatchRezeptIdListAbholstatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //List<RezeptId> rezeptId = null;
            //var response = instance.PatchRezeptIdListAbholstatus(apoik, rezeptId);
            //Assert.IsInstanceOf(typeof(List<Abholstatus>), response, "response is List<Abholstatus>");
        }
        
        /// <summary>
        /// Test PatchRezeptIdListStatus
        /// </summary>
        [Test]
        public void PatchRezeptIdListStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //List<RezeptStatus> rezeptStatus = null;
            //var response = instance.PatchRezeptIdListStatus(apoik, rezeptStatus);
            //Assert.IsInstanceOf(typeof(List<RezeptStatus>), response, "response is List<RezeptStatus>");
        }
        
        /// <summary>
        /// Test PutRezeptIdListPruefung
        /// </summary>
        [Test]
        public void PutRezeptIdListPruefungTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apoik = null;
            //List<RezeptId> rezeptId = null;
            //instance.PutRezeptIdListPruefung(apoik, rezeptId);
            
        }
        
    }

}
